(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{77:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(3),o=n(7),i=(n(0),n(88)),r={id:"configuration",title:"Configuration",sidebar_label:"Configuration",slug:"/configuration/"},s={unversionedId:"configuration",id:"configuration",isDocsHomePage:!1,title:"Configuration",description:"`ts",source:"@site/docs/configuration.md",slug:"/configuration/",permalink:"/docs/configuration/",version:"current",sidebar_label:"Configuration",sidebar:"docs",previous:{title:"Usage",permalink:"/docs/usage/"},next:{title:"Storage API Reference",permalink:"/docs/storage/"}},c=[],l={toc:c};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),'interface StorageOptions {\n    allowStale?: boolean // default: false\n    description?: string // default: undefined\n    driver?: string | string[] // default: undefined, for ReactNative its set internally\n    namespace?: string // default: "ReactAsyncStorage"\n    preferCache?: boolean // default: true\n    size?: number // default undefined\n    storeName?: string // default: "defaultStore"\n    version?: string // default: "1.0.0"\n}\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Options"),":"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"allowStale"),": set this to true to not automatically prune stale records."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"description"),": add a description to the store. You can see it in the application tab of the browser."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"driver"),": set the driver for localForage, for more details see the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://localforage.github.io/localForage/#settings-api-config"}),"localForage documentation"),". This option is ignored in react-native."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"namespace"),": the namespace used by storage - only the first value passed will be used (i.e. you can set namespace only one.) Defaults to ",Object(i.b)("inlineCode",{parentName:"p"},"ReactAsyncStorage"),"."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"preferCache"),": whether or not to use in-memory caching (memoization), which increases performance. Defaults to true."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"size"),": limit the phsical size allocated to the given store. For more details see the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://localforage.github.io/localForage/#settings-api-config"}),"localForage documentation")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"storeName"),": the namespace used by the particular Storage instance. This option has to be set if you are creating multiple instances. Otherwise it defaults to ",Object(i.b)("inlineCode",{parentName:"p"},"defaultStore")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"version"),": version of the storage instance."))}p.isMDXComponent=!0}}]);